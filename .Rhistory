friendsT2cluster <- cluster_louvain(friendsgraph)
modularity(friendsT2cluster)
library(networkD3)
graph2 <- igraph_to_networkD3(friendsgraph)
graph2$nodes$comm <- as.character(membership(friendscluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%
filter(weight > 3)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 3) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%
filter(weight > 10)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 10) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%
filter(weight > 10)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 10) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 3]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%
filter(weight > 10)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 10) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 2]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%
filter(weight > 10)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 10) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
#degrees <- degree(friendsT2graph, mode='total')
#deletedegrees <- degrees[degrees < 2]
#friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
friendsT2[friendsT2$from == '4611686018467643119' or friendsT2$to == '4611686018467643119']
friendsT2[friendsT2$from == '4611686018467643119' | friendsT2$to == '4611686018467643119']
friendsT2[from == '4611686018467643119' | friendsT2$to == '4611686018467643119']
friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119']
friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119')
friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
filter(from == '4611686018468695677' | to == '4611686018468695677')
df %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
filter(from == '4611686018468695677' | to == '4611686018468695677')
#load("fullTimelines.RData")
#load("users.RData")
#timelines %>% filter(retweet_user_id %in% users$user_id) -> seledges
df <- read.csv('graph.csv', stringsAsFactors = F, colClasses = "character")
df <- select(df, c('from', 'to', 'weight')) %>% unique.data.frame()
df$weight <- as.numeric(df$weight)
csvvertices <- read.csv('vertices.csv', stringsAsFactors = F, colClasses = "character")
vdf <- csvvertices %>% select('id','name') %>% unique.data.frame()
vdf <- filter(vdf, vdf$name != 0)
length(df$from)
graph <- graph_from_data_frame(df, directed = F, vertices = setNames(vdf, c("id","label")))
#load("fullTimelines.RData")
#load("users.RData")
#timelines %>% filter(retweet_user_id %in% users$user_id) -> seledges
df <- read.csv('graph.csv', stringsAsFactors = F, colClasses = "character")
df <- select(df, c('from', 'to', 'weight')) %>% unique.data.frame()
df$weight <- as.numeric(df$weight)
csvvertices <- read.csv('vertices.csv', stringsAsFactors = F, colClasses = "character")
vdf <- csvvertices %>% select('id','name') %>% unique.data.frame()
vdf <- filter(vdf, vdf$name != 0)
length(df$from)
#graph <- graph_from_data_frame(df, directed = F, vertices = setNames(vdf, c("id","label")))
friends <- df %>% filter(from == '4611686018468695677' | to == '4611686018468695677') %>%
filter(weight > 3)
friendlist <- c(friends$to, friends$from) %>% unique()
friends <- df %>% filter(from %in% friendlist & to %in% friendlist)%>%
filter(weight > 3) %>%
bind_rows(friends)
friendsgraph <- graph_from_data_frame(friends, directed = F)
friendscluster <- cluster_louvain(friendsgraph)
head(friends)
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%
filter(weight > 10)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 10) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
#degrees <- degree(friendsT2graph, mode='total')
#deletedegrees <- degrees[degrees < 2]
#friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
df %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
filter(from == '4611686018468695677' | to == '4611686018468695677')
library(networkD3)
graph2 <- igraph_to_networkD3(friendsgraph)
graph2$nodes$comm <- as.character(membership(friendscluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
friends <- df %>% filter(from == '4611686018468695677' | to == '4611686018468695677') #%>% filter(weight > 3)
friendlist <- c(friends$to, friends$from) %>% unique()
friends <- df %>% filter(from %in% friendlist & to %in% friendlist)%>%
#filter(weight > 3) %>%
bind_rows(friends)
friendsgraph <- graph_from_data_frame(friends, directed = F)
friendscluster <- cluster_louvain(friendsgraph)
head(friends)
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist)# %>%  filter(weight > 10)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
#filter(weight > 10) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 2]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
df %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
filter(from == '4611686018468695677' | to == '4611686018468695677')
df %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
filter(from == '4611686018468695677' | to == '4611686018468695677')
friends %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
filter(from == '4611686018468695677' | to == '4611686018468695677')
friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
filter(from == '4611686018468695677' | to == '4611686018468695677')
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
#load("fullTimelines.RData")
#load("users.RData")
#timelines %>% filter(retweet_user_id %in% users$user_id) -> seledges
df <- read.csv('graph.csv', stringsAsFactors = F, colClasses = "character")
df <- select(df, c('from', 'to', 'weight')) %>% unique.data.frame()
df$weight <- as.numeric(df$weight)
csvvertices <- read.csv('vertices.csv', stringsAsFactors = F, colClasses = "character")
vdf <- csvvertices %>% select('id','name') %>% unique.data.frame()
vdf <- filter(vdf, vdf$name != 0)
length(df$from)
#graph <- graph_from_data_frame(df, directed = F, vertices = setNames(vdf, c("id","label")))
friends <- df %>% filter(from == '4611686018468695677' | to == '4611686018468695677') %>% filter(weight > 3)
friendlist <- c(friends$to, friends$from) %>% unique()
friends <- df %>% filter(from %in% friendlist & to %in% friendlist)%>%
filter(weight > 3) %>%
bind_rows(friends)
friendsgraph <- graph_from_data_frame(friends, directed = F)
friendscluster <- cluster_louvain(friendsgraph)
head(friends)
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%  filter(weight > 5)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 5) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 2]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
#friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
#              filter(from == '4611686018468695677' | to == '4611686018468695677')
library(networkD3)
graph2 <- igraph_to_networkD3(friendsgraph)
graph2$nodes$comm <- as.character(membership(friendscluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%  filter(weight > 5)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 5) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 3]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
#friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
#              filter(from == '4611686018468695677' | to == '4611686018468695677')
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%  filter(weight > 5)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 5) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 2]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
#friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
#              filter(from == '4611686018468695677' | to == '4611686018468695677')
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
degrees <- degree(friendsT2graph, mode='total')
degrees
deletedegrees <- degrees[degrees < 2]
'4611686018484825875' %in% deletedegrees
deletedegrees <- degrees[degrees < 3]
'4611686018468695677' %in% deletedegrees
friends <- df %>% filter(from == '4611686018484825875' | to == '4611686018484825875') %>% filter(weight > 3)
friendlist <- c(friends$to, friends$from) %>% unique()
friends <- df %>% filter(from %in% friendlist & to %in% friendlist)%>%
filter(weight > 3) %>%
bind_rows(friends)
friendsgraph <- graph_from_data_frame(friends, directed = F)
friendscluster <- cluster_louvain(friendsgraph)
head(friends)
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%  filter(weight > 5)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 5) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 3]
'4611686018468695677' %in% deletedegrees
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
#friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
#              filter(from == '4611686018468695677' | to == '4611686018468695677')
degrees <- degree(fofgraph, mode='total')
degrees <- degrees[degrees < 3]
smol <- delete_vertices(fofgraph, degrees)
smollouvain <- cluster_louvain(smol)
#smol
#degrees[degrees < 3]
graph2 <- igraph_to_networkD3(smol)
graph2$nodes$comm <- as.character(membership(smollouvain))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
graph2$links$weight <- as.numeric(E(smol)$weight)
#chargevec = -30 / (friendsoffriends$weight/sqrt(sum(friendsoffriends$weight^2))) -22
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15)
#load("fullTimelines.RData")
#load("users.RData")
#timelines %>% filter(retweet_user_id %in% users$user_id) -> seledges
df <- read.csv('graph.csv', stringsAsFactors = F, colClasses = "character")
df <- select(df, c('from', 'to', 'weight')) %>% unique.data.frame()
df$weight <- as.numeric(df$weight)
csvvertices <- read.csv('vertices.csv', stringsAsFactors = F, colClasses = "character")
vdf <- csvvertices %>% select('id','name') %>% unique.data.frame()
vdf <- filter(vdf, vdf$name != 0)
length(df$from)
#graph <- graph_from_data_frame(df, directed = F, vertices = setNames(vdf, c("id","label")))
friends <- df %>% filter(from == '4611686018484825875' | to == '4611686018484825875') %>% filter(weight > 3)
friendlist <- c(friends$to, friends$from) %>% unique()
friends <- df %>% filter(from %in% friendlist & to %in% friendlist)%>%
filter(weight > 3) %>%
bind_rows(friends)
friendsgraph <- graph_from_data_frame(friends, directed = F)
friendscluster <- cluster_louvain(friendsgraph)
head(friends)
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%  filter(weight > 5)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 5) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 3]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
#friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
#              filter(from == '4611686018468695677' | to == '4611686018468695677')
degrees <- degree(fofgraph, mode='total')
degrees <- degrees[degrees < 3]
smol <- delete_vertices(fofgraph, degrees)
smollouvain <- cluster_louvain(smol)
#smol
#degrees[degrees < 3]
graph2 <- igraph_to_networkD3(smol)
graph2$nodes$comm <- as.character(membership(smollouvain))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
graph2$links$weight <- as.numeric(E(smol)$weight)
#chargevec = -30 / (friendsoffriends$weight/sqrt(sum(friendsoffriends$weight^2))) -22
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15)
#load("fullTimelines.RData")
#load("users.RData")
#timelines %>% filter(retweet_user_id %in% users$user_id) -> seledges
df <- read.csv('graph.csv', stringsAsFactors = F, colClasses = "character")
df <- select(df, c('from', 'to', 'weight')) %>% unique.data.frame()
df$weight <- as.numeric(df$weight)
csvvertices <- read.csv('vertices.csv', stringsAsFactors = F, colClasses = "character")
vdf <- csvvertices %>% select('id','name') %>% unique.data.frame()
vdf <- filter(vdf, vdf$name != 0)
length(df$from)
#graph <- graph_from_data_frame(df, directed = F, vertices = setNames(vdf, c("id","label")))
friends <- df %>% filter(from == '4611686018484825875' | to == '4611686018484825875') %>% filter(weight > 3)
friendlist <- c(friends$to, friends$from) %>% unique()
friends <- df %>% filter(from %in% friendlist & to %in% friendlist)%>%
filter(weight > 3) %>%
bind_rows(friends)
friendsgraph <- graph_from_data_frame(friends, directed = F)
friendscluster <- cluster_louvain(friendsgraph)
head(friends)
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%  filter(weight > 5)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 5) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 3]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
#friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
#              filter(from == '4611686018468695677' | to == '4611686018468695677')
degrees <- degree(fofgraph, mode='total')
library(networkD3)
graph2 <- igraph_to_networkD3(friendsgraph)
graph2$nodes$comm <- as.character(membership(friendscluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
#load("fullTimelines.RData")
#load("users.RData")
#timelines %>% filter(retweet_user_id %in% users$user_id) -> seledges
df <- read.csv('graph.csv', stringsAsFactors = F, colClasses = "character")
df <- select(df, c('from', 'to', 'weight')) %>% unique.data.frame()
df$weight <- as.numeric(df$weight)
csvvertices <- read.csv('vertices.csv', stringsAsFactors = F, colClasses = "character")
vdf <- csvvertices %>% select('id','name') %>% unique.data.frame()
vdf <- filter(vdf, vdf$name != 0)
length(df$from)
#graph <- graph_from_data_frame(df, directed = F, vertices = setNames(vdf, c("id","label")))
friends <- df %>% filter(from == '4611686018484825875' | to == '4611686018484825875') %>% filter(weight > 3)
friendlist <- c(friends$to, friends$from) %>% unique()
friends <- df %>% filter(from %in% friendlist & to %in% friendlist)%>%
filter(weight > 3) %>%
bind_rows(friends)
friendsgraph <- graph_from_data_frame(friends, directed = F)
friendscluster <- cluster_louvain(friendsgraph)
head(friends)
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%  filter(weight > 5)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 5) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 3]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
#friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
#              filter(from == '4611686018468695677' | to == '4611686018468695677')
library(networkD3)
graph2 <- igraph_to_networkD3(friendsgraph)
graph2$nodes$comm <- as.character(membership(friendscluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15)
'4611686018484825875' %in% V(friendsT2graph)$label
'4611686018484825875' %in% V(friendsT2graph)$name
'4611686018484825875' %in% graph2$nodes$name
'4611686018468695677' %in% graph2$nodes$name
'4611686018468695677' %in% V(friendsT2graph)$name
'4611686018484825875' %in% V(friendsT2graph)$name
'4611686018484825875' %in% friendT2list
'4611686018484825875' %in% friendsT2$from
'4611686018484825875' %in% friendsT2$to
'4611686018484825875' %in% deletedegrees
'4611686018484825875' %in% friendsT2graph
'4611686018484825875' %in% V(friendsT2graph)$name
'4611686018468695677' %in% V(friendsT2graph)$name
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
'4611686018468695677' %in% V(friendsT2graph)$name
'4611686018484825875' %in% V(friendsT2graph)$name
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 3]
'4611686018484825875' %in% deletedegrees
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
'4611686018484825875' %in% V(friensT2graph)$named
'4611686018484825875' %in% V(friendsT2graph)$named
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
'4611686018484825875' %in% V(friendsT2graph)$named
'4611686018484825875' %in% V(friendsT2graph)$named
'4611686018484825875' %in% V(friendsT2graph)$name
'4611686018484825875' %in% deletedegrees
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 3]
friendsT2graph <- delete_vertices(friendsT2graph, deletedegrees)
'4611686018484825875' %in% V(friendsT2graph)$name
degrees <- degree(friendsT2graph, mode='total')
'4611686018484825875' %in% V(friendsT2graph)$name
friendsT2 <- df %>% filter(from %in% friendlist | to %in% friendlist) %>%  filter(weight > 5)
friendT2list <- c(friendsT2$to, friendsT2$from) %>% unique()
friendsT2 <- df %>% filter(from %in% friendT2list & to %in% friendT2list)%>%
filter(weight > 5) %>%
bind_rows(friendsT2)
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
degrees <- degree(friendsT2graph, mode='total')
deletedegrees <- degrees[degrees < 3]
friendsT2graph <- delete_vertices(friendsT2graph, V(friendsT2graph)[degree(friendsT2graph) < 3])
'4611686018484825875' %in% V(friendsT2graph)$name
'4611686018484825875' %in% deletedegrees
'4611686018468695677' %in% V(friendsT2graph)$name
friendsT2cluster <- cluster_louvain(friendsT2graph)
modularity(friendsT2cluster)
#friendsT2 %>% filter(from == '4611686018467643119' | to == '4611686018467643119') %>%
#              filter(from == '4611686018468695677' | to == '4611686018468695677')
friendsT2graph <- graph_from_data_frame(friendsT2, directed = F)
'4611686018484825875' %in% V(friendsT2graph)$name
'4611686018468695677' %in% V(friendsT2graph)$name
#degrees <- degree(friendsT2graph, mode='total')
#deletedegrees <- degrees[degrees < 3]
friendsT2graph <- delete_vertices(friendsT2graph, V(friendsT2graph)[degree(friendsT2graph) < 3])
'4611686018484825875' %in% V(friendsT2graph)$name
library(networkD3)
graph2 <- igraph_to_networkD3(friendsgraph)
graph2$nodes$comm <- as.character(membership(friendscluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
library(networkD3)
graph2 <- igraph_to_networkD3(friendsT2graph)
graph2$nodes$comm <- as.character(membership(friendsT2cluster))
graph2$nodes$label <- vdf$name[match(graph2$nodes$name, vdf$id)]
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15)
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 15)
forceNetwork(Links=graph2$links, Nodes=graph2$nodes, NodeID="label", Group="comm", zoom=T, opacity = 1, opacityNoHover = 1, fontSize = 12, linkDistance = JS("function(d){return 200- d['NA..3']}"), linkWidth = JS("function(d){return d['NA..3']/50}"))
